#name: DDU-A Build, Push Docker Image and Deploy to EC2
#
#on:
#  pull_request:
#    types: [closed]
#    branches:
#      - develop
#
#permissions:
#  contents: read
#
#jobs:
#  build-and-push-docker:
#    if: github.event.pull_request.merged == true
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: 17
#          distribution: 'temurin'
#
#      - name: Set up application.properties
#        run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew build -x test
#
#      - name: Build the Docker image
#        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} .
#
#      - name: Login to Docker Hub using Access Token
#        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
#
#      - name: Push the Docker image
#        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
#
#  copy-files-to-ec2:
#    needs: build-and-push-docker
#    runs-on: ubuntu-latest
#    steps:
#      - name: Copy files to EC2
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_KEY }}
#          source: "docker-compose.yml, .env, src/main/resources/application-dev.yml, src/main/resources/application-secret.yml"
#          target: "/home/ec2-user/Dart_BE"
#
#  deploy-to-ec2:
#    needs: build-and-push-docker
#    runs-on: ubuntu-latest
#    steps:
#      - name: Deploy to EC2
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_KEY }}
#          script: |
#            cd /home/ec2-user/Dart_BE
#
#            docker-compose down
#            docker-compose pull
#            docker-compose up -d
