name: Build, Push Docker Image and Deploy to EC2

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Set up application.properties
        run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Build the Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} .

      - name: Login to Docker Hub using Access Token
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push the Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}

  create-files:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create application-dev.yml file
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_DEV }}" > src/main/resources/application-dev.yml

  verify-files:
    needs: create-files
    runs-on: ubuntu-latest
    steps:

      - name: Verify application-dev.yml file exists
        run: ls -l src/main/resources/application-dev.yml

      - name: Verify docker-compose.yml file exists
        run: ls -l docker-compose.yml

  copy-files-to-ec2:
    needs: create-files
    runs-on: ubuntu-latest
    steps:
      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          source: "docker-compose.yml, src/main/resources/application-dev.yml"
          target: "/home/ec2-user/Dart_BE"

  deploy-to-ec2:
    needs: copy-files-to-ec2
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ec2-user/Dart_BE
            
            docker-compose down
            docker-compose pull
            docker-compose up -d
